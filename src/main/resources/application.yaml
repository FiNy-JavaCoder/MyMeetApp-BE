# src/main/resources/application.yaml
# Hlavní konfigurace pro Connecta Dating App Backend

server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-message: on_param
    include-binding-errors: on_param
    include-stacktrace: on_param

spring:
  application:
    name: connecta-dating-app

  # Database configuration - H2 for development
  datasource:
    url: jdbc:h2:mem:connecta_db
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10

  # JPA/Hibernate configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: false
    open-in-view: false

  # H2 Console configuration
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
        trace: false

  # Jackson JSON configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    time-zone: Europe/Prague
    date-format: yyyy-MM-dd HH:mm:ss
    deserialization:
      fail-on-unknown-properties: false

  # Validation configuration
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

  # File upload configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true

  # Cache configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=300s

  # Email configuration (pro budoucí use)
  mail:
    host: localhost
    port: 587
    username: 
    password: 
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

# CORS configuration
cors:
  allowed-origins: 
    - http://localhost:5173
    - http://localhost:3000
    - http://127.0.0.1:5173
    - http://localhost:4173
  allowed-methods: 
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    - PATCH
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

# Logging configuration
logging:
  level:
    MyApp.BE: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.zaxxer.hikari: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/connecta-app.log

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: 
          - health
          - info
          - env
          - metrics
          - loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# Application info
info:
  app:
    name: Connecta Dating App Backend
    description: Backend aplikace pro seznamku Connecta
    version: 1.0.0
    encoding: UTF-8
    java:
      version: 17

# Custom application properties
connecta:
  app:
    name: "Connecta Dating App"
    version: "1.0.0"
    description: "Moderní seznamovací aplikace"
    
  security:
    jwt:
      secret: "mySecretKey"
      expiration: 86400000 # 24 hours
      
  file:
    upload:
      path: "uploads/"
      max-size: 10MB
      allowed-types:
        - image/jpeg
        - image/png
        - image/gif

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev

  # Development specific settings
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

  # H2 specific settings for dev
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    MyApp.BE: DEBUG
    org.springframework: INFO
    org.hibernate.SQL: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod

  # Production database configuration - MySQL
  datasource:
    url: jdbc:mysql://localhost:3306/connecta_db?useSSL=false&serverTimezone=Europe/Prague&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:connecta_user}
    password: ${DB_PASSWORD:connecta_password}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 20
      minimum-idle: 5

  # Production JPA settings
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        generate_statistics: false
    database-platform: org.hibernate.dialect.MySQL8Dialect

  # Disable H2 console in production
  h2:
    console:
      enabled: false

# Production security settings
server:
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never

# Production logging
logging:
  level:
    MyApp.BE: INFO
    org.springframework: WARN
    org.hibernate: WARN
    org.springframework.web: WARN
  file:
    name: /var/log/connecta/connecta-app.log

# Production actuator settings
management:
  endpoints:
    web:
      exposure:
        include: 
          - health
          - info
  endpoint:
    health:
      show-details: never

---
# Testing profile
spring:
  config:
    activate:
      on-profile: test

  # Test database configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

# Test logging
logging:
  level:
    MyApp.BE: DEBUG
    org.springframework: WARN

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker

  # Docker database configuration
  datasource:
    url: jdbc:mysql://mysql:3306/connecta_db?useSSL=false&serverTimezone=Europe/Prague
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:connecta_user}
    password: ${DB_PASSWORD:connecta_password}

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect

# Docker specific settings
server:
  port: 8080

cors:
  allowed-origins: 
    - http://frontend:3000
    - http://localhost:3000
    - http://localhost:5173

logging:
  level:
    MyApp.BE: INFO
    root: INFO